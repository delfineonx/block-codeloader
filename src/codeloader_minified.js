// Copyright (c) 2025 delfineonx
// This product includes "Codeloader" created by delfineonx.
// Licensed under the Apache License, Version 2.0 (the "License").

const CF=Object.seal({
ACTIVE_EVENTS:Object.freeze([
/* ... */
]),
blocks:[
/* ... */
],
boot_manager:Object.seal({
boot_delay_ms:200,
show_load_time:true,
show_errors:true,
}),
block_manager:Object.seal({
default_locked_status:true,
default_eval_status:true,
max_registrations_per_tick:32,
max_requests_per_tick:8,
max_evals_per_tick:16,
max_error_logs:32,
}),
join_manager:Object.seal({
reset_on_reboot:true,
max_dequeue_per_tick:8,
}),
interruption_manager:Object.seal({
is_enabled:false,
max_dequeue_per_tick:16,
default_retry_delay_ms:0,
default_retry_limit_ms:50,
default_retry_interval_ms:0,
default_retry_cooldown_ms:500,
}),
EVENT_REGISTRY:Object.seal({
tick:null,
onClose:[!0],
onPlayerJoin:[!0],
onPlayerLeave:[!0],
onPlayerJump:[!0],
onRespawnRequest:[!1],
playerCommand:[!1],
onPlayerChat:[!1],
onPlayerChangeBlock:[!1],
onPlayerDropItem:[!1],
onPlayerPickedUpItem:[!0],
onPlayerSelectInventorySlot:[!0],
onBlockStand:[!0],
onPlayerAttemptCraft:[!1],
onPlayerCraft:[!0],
onPlayerAttemptOpenChest:[!1],
onPlayerOpenedChest:[!0],
onPlayerMoveItemOutOfInventory:[!1],
onPlayerMoveInvenItem:[!1],
onPlayerMoveItemIntoIdxs:[!1],
onPlayerSwapInvenSlots:[!1],
onPlayerMoveInvenItemWithAmt:[!1],
onPlayerAttemptAltAction:[!1],
onPlayerAltAction:[!0],
onPlayerClick:[!0],
onClientOptionUpdated:[!0],
onMobSettingUpdated:[!0],
onInventoryUpdated:[!0],
onChestUpdated:[!0],
onWorldChangeBlock:[!1],
onCreateBloxdMeshEntity:[!0],
onEntityCollision:[!0],
onPlayerAttemptSpawnMob:[!1],
onWorldAttemptSpawnMob:[!1],
onPlayerSpawnMob:[!0],
onWorldSpawnMob:[!0],
onWorldAttemptDespawnMob:[!1],
onMobDespawned:[!0],
onPlayerAttack:[!0],
onPlayerDamagingOtherPlayer:[!1],
onPlayerDamagingMob:[!1],
onMobDamagingPlayer:[!1],
onMobDamagingOtherMob:[!1],
onAttemptKillPlayer:[!1],
onPlayerKilledOtherPlayer:[!1],
onMobKilledPlayer:[!1],
onPlayerKilledMob:[!1],
onMobKilledOtherMob:[!1],
onPlayerPotionEffect:[!0],
onPlayerDamagingMeshEntity:[!0],
onPlayerBreakMeshEntity:[!0],
onPlayerUsedThrowable:[!0],
onPlayerThrowableHitTerrain:[!0],
onTouchscreenActionButton:[!0],
onTaskClaimed:[!0],
onChunkLoaded:[!0],
onPlayerRequestChunk:[!0],
onItemDropCreated:[!0],
onPlayerStartChargingItem:[!0],
onPlayerFinishChargingItem:[!0],
doPeriodicSave:[!0],
}),
LOG_STYLE:Object.seal({
error:{color:"#ff9d87",fontWeight:"600",fontSize:"1rem"},
warning:{color:"#fcd373",fontWeight:"600",fontSize:"1rem"},
success:{color:"#2eeb82",fontWeight:"600",fontSize:"1rem"},
})
});

const EM={I:null,N:null,d:null,A:null,a:null,u:null,E:null,t:0,r:0,P:!1,T:!1,e:!1,s_(){let S=this;if(!S.P){let l=!!CF.interruption_manager.is_enabled,R=CF.EVENT_REGISTRY,V=CF.ACTIVE_EVENTS,N=S.N=function(){},d=S.d,A=S.A=[],a=S.a={},u=S.u=[],I=S.I;I.N={};let X=I.I={},D=I.D=[];I.U=new Int32Array(4);let Y=I.Y=[],q=I.q=new Uint32Array(2),i=I.i=new Uint32Array(2),x=0;for(let v of V){if(!Object.hasOwn(R,v)){u[u.length]=v;continue}A[A.length]=v;a[v]=!0;if("tick"!==v){if(!Array.isArray(R[v])){R[v]=[]}let s=R[v][0]=!!R[v][0];if(l&&s){I.a=!0;let c=x;X[v]=c;Y[c]=new Int32Array(6);let n=D[c]=[v,-1,new Array(9)],g=n[2];d[v]=I.N[v]=function(){I.i_(c)};globalThis[v]=function(a0,a1,a2,a3,a4,a5,a6,a7,a8){i[c>>5]|=q[c>>5]|=1<<(c&31);n[1]=I.n;g[0]=a0;g[1]=a1;g[2]=a2;g[3]=a3;g[4]=a4;g[5]=a5;g[6]=a6;g[7]=a7;g[8]=a8;return d[v](a0,a1,a2,a3,a4,a5,a6,a7,a8)};x++}else{d[v]=N;globalThis[v]=function(a0,a1,a2,a3,a4,a5,a6,a7,a8){return d[v](a0,a1,a2,a3,a4,a5,a6,a7,a8)}}}}S.P=!0}},i_(){let S=this;if(!S.T){let n=S.I.N,N=S.N,d=S.d,A=S.A,l=A.length,c=S.t;while(c<l){let v=A[c],O=n[v]??N;Object.defineProperty(globalThis,v,{configurable:!0,set:F=>{d[v]="function"===typeof F?F:O}});c=++S.t}S.T=c>=l}return S.T},e_(){if(!this.e){this.r=0;this.e=!0}},r_(){let S=this,n=S.I.N,N=S.N,d=S.d,A=S.A,l=A.length,c=S.r;while(c<l){let v=A[c];if("tick"!==v){d[v]=n[v]??N}c=++S.r}return c>=l}},IM={E:null,B:null,N:null,I:null,D:null,R:null,U:null,Q:1,n:-1,Y:null,q:null,i:null,s:0,a:!1,e:!1,t:{C:0,T:1,D:2,L:3,I:4,W:5,R:-1,Y:-2},d:{N:0,T:1,A:2},e_(){let S=this;if(!S.e){S.R=CF.EVENT_REGISTRY;let C=CF.interruption_manager,U=S.U,t=S.t,O=t.Y,d=(0|C.default_retry_delay_ms)*.02|0;U[t.D+O]=d&~(d>>31);let l=(0|C.default_retry_limit_ms)*.02|0;U[t.L+O]=l&~(l>>31);let i=(0|C.default_retry_interval_ms)*.02|0;U[t.I+O]=i&~(i>>31);let w=(0|C.default_retry_cooldown_ms)*.02|0;U[t.W+O]=(w&~(w>>31))+(-w>>31)+1;let Q=0|C.max_dequeue_per_tick;S.Q=(Q&~(Q>>31))+(-Q>>31)+1;S.n=0;S.q[0]=0;S.q[1]=0;S.i[0]=0;S.i[1]=0;S.s=0;S.e=!0}},s_(){let S=this,D=S.D,R=S.R,U=S.U,Y=S.Y,t=S.t,E=t.C,V=t.T,F=t.D,M=t.L,J=t.I,X=t.W,T=t.R,Z=t.Y,N=S.d.N,l=Y.length,c=S.s;while(c<l){let v=D[c][N],r=R[v],y=Y[c];y[E]=0;y[V]=0;let f=r[F+T];if(void 0===f||null===f){y[F]=U[F+Z]}else{let d=(0|f)*.02|0;y[F]=d&~(d>>31)}let m=r[M+T];if(void 0===m||null===m){y[M]=U[M+Z]}else{let l=(0|m)*.02|0;y[M]=l&~(l>>31)}let j=r[J+T];if(void 0===j||null===j){y[J]=U[J+Z]}else{let i=(0|j)*.02|0;y[J]=i&~(i>>31)}let x=r[X+T];if(void 0===x||null===x){y[X]=U[X+Z]}else{let w=(0|x)*.02|0;y[X]=(w&~(w>>31))+(-w>>31)+1}c=++S.s}return c>=l},i_(x){this.q[x>>5]&=~(1<<(31&x));this.i[x>>5]&=~(1<<(31&x))},q_(){let S=this,q=S.q;if(!q[0]&&!q[1]){return}let D=S.D,n=S.n,Y=S.Y,i=S.i,t=S.t,E=t.C,U=t.T,F=t.D,M=t.L,J=t.I,X=t.W,d=S.d,N=d.N,T=d.T,A=d.A,u=S.Q,w=0;while(w<2){i[w]|=q[w];while(i[w]&&u>0){let b=i[w]&-i[w],x=w<<5|31-Math.clz32(b),d=D[x],y=Y[x];if(n-d[T]<=y[F]){i[w]&=~b;continue}if(y[U]>=n){q[w]&=~b;i[w]&=~b;continue}if(y[E]>=y[M]){let r=(y[M]+y[J])/(y[J]+1)|0;if(r>1){api.broadcastMessage([{str:`Codeloader: InterruptionManager: "${d[N]}" has been dropped after ${r} consecutive interrupted retry ticks.`,style:S.B.g?.e??{}}])}let a=d[A];a[0]=a[1]=a[2]=a[3]=a[4]=a[5]=a[6]=a[7]=a[8]=void 0;y[E]=0;y[U]=n+y[X];q[w]&=~b;i[w]&=~b;continue}if(!(y[E]%(y[J]+1))){y[E]++;let a=d[A];if(a){S.E.d[d[N]].apply(null,a);a[0]=a[1]=a[2]=a[3]=a[4]=a[5]=a[6]=a[7]=a[8]=void 0}y[E]=0;u--;continue}y[E]++;i[w]&=~b}w++}}},TM={E:null,I:null,B:null,b:null,i:null,m:null,e:!1,t:!1,f:!1,e_(){let S=this;if(!S.e){let N=S.E.N;S.b=N;S.i=N;S.m=N;S.t=!1;S.f=!1;S.e=!0}},d_(){TM.b();TM.i();TM.m()},t_(){TM.I.n++;TM.m();TM.I.q_()},i_(){let S=this;if(!S.t){let N=S.E.N,d=S.E.d;Object.defineProperty(globalThis,"tick",{configurable:!0,set:F=>{S.m="function"===typeof F?F:N}});S.b=d.tick;d.tick=S.d_;S.t=!0}},f_(){let S=this;if(!S.f){let N=S.E.N,d=S.E.d;if(!S.I.a){Object.defineProperty(globalThis,"tick",{configurable:!0,set:F=>{d.tick="function"===typeof F?F:N}}),d.tick=S.m}else{d.tick=S.t_}S.b=N;S.i=N;S.f=!0}}},JM={E:null,B:null,I:null,r:!0,q:1,m:null,b:null,j:null,d:0,e:!1,t:!1,f:!1,J:{N:0,Q:1,P:2},e_(){let S=this;if(!S.e){let C=CF.join_manager;S.r=!!C.reset_on_reboot;let q=0|C.max_dequeue_per_tick;S.q=(q&~(q>>31))+(-q>>31)+1;S.m=S.E.N;S.b=[];if(S.r||!S.j){S.j={}}S.d=0;S.t=!1;S.f=!1;S.e=!0}},s_(){let S=this;if(S.r||S.B.P){let l=api.getPlayerIds(),b=S.b,j=S.j,N=S.J.N,Q=S.J.Q;for(let p of l){if((0|j[p])===N){b[b.length]=[p,!1];j[p]=Q}}}return!0},d_(p,r){JM.b[JM.b.length]=[p,r];JM.j[p]=JM.J.Q},i_(){let S=this;if(!S.t){S.E.d.onPlayerJoin=S.d_;let N=S.I.N.onPlayerJoin??this.E.N;Object.defineProperty(globalThis,"onPlayerJoin",{configurable:!0,set:F=>{S.m="function"==typeof F?F:N}});S.t=!0}},q_(){let S=this,m=S.m,b=S.b,j=S.j,P=S.J.P,u=S.q,c=S.d;while(c<b.length&&u>0){let a=b[c],p=a[0],r=a[1];if(j[p]!==P){m(p,r);j[p]=P;u--}c=++S.d}return c>=b.length},f_(){let S=this;if(!S.f){let N=S.I.N.onPlayerJoin??S.E.N,d=S.E.d;d.onPlayerJoin=S.m;Object.defineProperty(globalThis,"onPlayerJoin",{configurable:!0,set:F=>{d.onPlayerJoin="function"==typeof F?F:N}});S.f=!0}}},BM={B:null,b:null,k:!0,v:!0,G:1,R:1,V:1,O:0,h:-1,K:null,L:null,Q:null,E:null,N:!1,g:0,r:0,a:0,e:!1,T:{U:0,R:1,D:2},F:(0,eval),e_(){let S=this;if(!S.e){S.b=Array.isArray(CF.blocks)?CF.blocks.slice():[];let C=CF.block_manager;S.k=!!C.default_locked_status;S.v=!!C.default_eval_status;let G=0|C.max_registrations_per_tick;S.G=(G&~(G>>31))+(-G>>31)+1;let R=0|C.max_requests_per_tick;S.R=(R&~(R>>31))+(-R>>31)+1;let V=0|C.max_evals_per_tick;S.V=(V&~(V>>31))+(-V>>31)+1;let O=0|C.max_error_logs;S.O=O&~(O>>31);S.h=0;S.K={};S.L={};S.Q=[];S.E=[];S.N=!1;S.g=0;S.r=0;S.a=0;S.e=!0}},m_(){if(0===BM.h){return BM.r_()}if(1===BM.h){BM.i_()}},r_(){let S=this,b=S.b,k=S.k,v=S.v,K=S.K,L=S.L,Q=S.Q,n=b.length,u=S.G,c=S.g;while(c<n&&u>0){let B=b[c]=b[c].slice(),x=B[0]=(B[0]|0)-(B[0]<(B[0]|0)&1),y=B[1]=(B[1]|0)-(B[1]<(B[1]|0)&1),z=B[2]=(B[2]|0)-(B[2]<(B[2]|0)&1),i=x+"|"+y+"|"+z;void 0===B[3]||null===B[3]?K[i]=B[3]=k:K[i]=B[3]=!!B[3];let V=void 0===B[4]||null===B[4]?B[4]=v:B[4]=!!B[4];if(V){let l=api.isBlockInLoadedChunk(x,y,z),i=(x>>5)+"|"+(y>>5)+"|"+(z>>5);if(void 0===L[i]){L[i]=l<<1;if(!l){Q[Q.length]=[i,x>>5<<5,y>>5<<5,z>>5<<5]}}S.N=!0}u--;c=++S.g}if(c>=n){S.h=!S.N+1}},i_(){let S=this,L=S.L,R=S.T.R,D=S.T.D;{let Q=S.Q,n=Q.length,u=S.R,c=S.r;while(c<n&&u>0){let e=Q[c],i=e[0];if(L[i]===R){if(api.isBlockInLoadedChunk(e[1],e[2],e[3])){L[i]=D;c===S.r&&S.r++}}else if(1===api.getBlockId(e[1],e[2],e[3])){L[i]=R}else{L[i]=D;c===S.r&&S.r++}u--;c++}}{let b=S.b,O=S.O,E=S.E,F=S.F,n=b.length,u=S.V,c=S.a;while(c<n&&u>0){let B=b[c];if(!B[4]){c=++S.a;continue}let x=B[0],y=B[1],z=B[2],i=(x>>5)+"|"+(y>>5)+"|"+(z>>5);if(L[i]!==D){break}try{let C=api.getBlockData(x,y,z)?.persisted?.shared?.text;F(C)}catch(e){if(E.length<O){E[E.length]=[x,y,z,e.name,e.message]}}c=++S.a;u--}}if(S.a>=S.b.length){S.h=2}},k_(p){let x=(p[0]|0)-(p[0]<(p[0]|0)&1),y=(p[1]|0)-(p[1]<(p[1]|0)&1),z=(p[2]|0)-(p[2]<(p[2]|0)&1),i=x+"|"+y+"|"+z;return!this.B.R&&!!(this.K[i]??!0)}},OM={E:null,I:null,T:null,J:null,B:null,d:0,l:!0,e:!0,g:null,h:-1,n:-1,t:-1,P:!0,R:!1,tick(){let S=OM;S.n++;if(-1===S.h){return S.u_()}if(0===S.h){S.b_()}if(1===S.h){S.d_()}if(2===S.h){return S.e_()}if(3===S.h){S.p_()}if(4===S.h){S.s_()}if(5===S.h){return S.i_()}if(6===S.h){S.n_()}if(7===S.h){S.q_()}if(8===S.h){S.t_()}if(9===S.h){S.f_()}},u_(){let S=this;if(S.P){if(!S.E.P&&S.n>=10){let e=S.E.E,o=`Codeloader: EventManager: ${null===e?"Uncaught e":"E"}rror on events primary setup${null===e?".":` - ${e[0]}: ${e[1]}.`}`,l=api.getPlayerIds();for(let p of l){api.kickPlayer(p,o)}}}},b_(){let S=this;if(!S.R){S.n=0;let C=CF.boot_manager,d=(0|C.boot_delay_ms)*.02|0;S.d=d&~(d>>31);S.l=!!C.show_load_time;S.e=!!C.show_errors;S.g={e:Object.assign({},CF.LOG_STYLE.error),w:Object.assign({},CF.LOG_STYLE.warning),s:Object.assign({},CF.LOG_STYLE.success)};S.t=-1;S.E.e=!1;S.I.e=!1;S.T.e=!1;S.J.e=!1;S.B.e=!1;S.R=!0;S.h=1}},d_(){if(this.n>=this.d){this.h=2}},e_(){let S=this;S.E.e_();S.I.e_();S.T.e_();S.J.e_();S.B.e_();S.h=3},p_(){let c=1;if(this.P){c&=this.E.i_()}if(c&&this.E.r_()){this.h=4}},s_(){let S=this,c=1;if(S.I.a){c&=S.I.s_()}if(S.E.a.onPlayerJoin){c&=S.J.s_()}if(c){S.h=5}},i_(){if(this.E.a.onPlayerJoin){this.J.i_()}this.T.i_();this.h=6},n_(){this.T.i=this.B.m_;this.h=7},q_(){if(2===this.B.h){if(this.E.a.onPlayerJoin&&this.J.t){this.h=8}else{this.h=9}}},t_(){if(this.J.q_()){this.h=9}},f_(){let S=this;if(S.E.a.onPlayerJoin){S.J.f_()}S.T.f_();S.B.h=-1;S.P=!1;S.R=!1;S.h=-1;S.t=S.n-S.d+1;S.R_(S.l,S.e)},R_(l,e){let u=this.E.u;if(u.length){api.broadcastMessage([{str:`Codeloader: EventManager: Unregistered callbacks: ${u.join(", ")}.`,style:this.g?.w??{}}])}l&&this.T_(e);e&&this.E_()},T_(e){let t=50*this.t,c=this.B.E.length,o=`Codeloader: BootManager: Code was loaded in ${t} ms`;e?o+=` with ${c} error${1===c?"":"s"}.`:o+=".";api.broadcastMessage([{str:o,style:(c>0?this.g?.w:this.g?.s)??{}}])},E_(){let E=this.B.E;if(E.length>0){let o=`Codeloader: BlockManager: Code evaluation error${1===E.length?"":"s"}: `;for(const e of E){o+=`\n${e[3]} at (${e[0]}, ${e[1]}, ${e[2]}): ${e[4]} `}api.broadcastMessage([{str:o,style:this.g?.e??{}}])}}};globalThis.Codeloader=Object.freeze({get configuration(){return CF},get isRunning(){return OM.R},get errors(){return BM.E.slice()},setInterruptionState(v){let x=IM.I[v];if(void 0===x){if(EM.a[v]){api.broadcastMessage([{str:`Codeloader: InterruptionManager: setInterruptionState - "${v}" interruption status is false.`,style:OM.g?.w??{}}])}else{api.broadcastMessage([{str:`Codeloader: InterruptionManager: setInterruptionState - "${v}" is invalid active event name.`,style:OM.g?.e??{}}])}return}IM.i_(x)},isBlockLocked(p){return!Array.isArray(p)||3!==p.length||BM.k_(p)},reboot(){if(!OM.R){EM.d.tick=OM.tick;OM.h=0}else{api.broadcastMessage([{str:"Codeloader: BootManager: Wait until current running boot session is finished.",style:OM.g?.w??{}}])}},logBootResult(l=!0,e=!0){OM.R_(l,e)},logLoadTime(e=!0){OM.T_(e)},logErrors(){OM.E_()}});EM.I=IM;IM.E=EM;IM.B=OM;TM.E=EM;TM.I=IM;TM.B=OM;JM.E=EM;JM.I=IM;JM.B=OM;BM.B=OM;OM.E=EM;OM.I=IM;OM.T=TM;OM.J=JM;OM.B=BM;{let d=EM.d={};EM.t=0;EM.P=!1;EM.T=!1;OM.h=-1;OM.P=!0;OM.R=!1;OM.n=0;d.tick=OM.tick;globalThis.tick=function(){d.tick()}}try{EM.s_();OM.h=0}catch(e){EM.E=[e.name,e.message]}
void 0;
